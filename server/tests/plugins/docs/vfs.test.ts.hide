// todo-0: re-enable these tests.
///
// describe('VFS Test', () => {
//     let pgdb: any;
//     let vfsTestModule: any;
//     let folderRenameModule: any;
//     let fileMovesTestModule: any;
//     let authTestModule: any;
//     let databaseAvailable = false;
//     let owner_id: number;
    
//     // Helper function to check if database is available and skip test if not
//     const checkDB = () => {
//         if (!databaseAvailable) {
//             process.stdout.write('Skipping test - database not available');
//             throw new Error('Database not available, failing tests.');
//         }
//     }

//     // Use beforeAll to set up modules once for all tests
//     beforeAll(async () => {
//         try {
//             // Use absolute paths from the dist directory root
//             const distRoot = process.cwd() + '/dist';
//             const base = `${distRoot}/server/plugins/docs/VFS/test`;
            
//             // Import necessary modules using dynamic imports (proper ESM)
//             process.stdout.write("importing VFSTest.js module");
//             vfsTestModule = await import(`${base}/VFSTest.js`);
//             process.stdout.write("imported VFSTest.js ok");
//             folderRenameModule = await import(`${base}/FolderRenameTest.js`);
//             fileMovesTestModule = await import(`${base}/FileMovesTest.js`);
//             authTestModule = await import(`${base}/AuthTest.js`);
//             const pgdbModule = await import(`${distRoot}/server/PGDB.js`);
//             process.stdout.write("all imports done");
//             pgdb = pgdbModule.default;

//             owner_id = pgdb.adminProfile!.id;
//             if (!owner_id) {
//                 throw new Error('Admin profile not found, cannot run tests');
//             }
            
//             // Test database connection
//             await pgdb.query('SELECT 1');
            
//             // If we reach here, database is available
//             databaseAvailable = true;
//             console.info('Database connection successful - tests will run');
//         } catch (error) {
//             // Database or modules not available
//             console.info('Database not available or module import failed:', (error as Error).message);
//             databaseAvailable = false;
//         }
//     });

//     it('folderRenameWithChildren(B)', async () => {
//         const distRoot = process.cwd() + '/dist';
//         const base = `${distRoot}/server/plugins/docs/VFS/test`;
            
//         // Import necessary modules using dynamic imports (proper ESM
//         folderRenameModule = await import(`${base}/FolderRenameTest.js`);
//         await folderRenameModule.testFolderRenameWithChildren(owner_id);
//     });

//     it('simpleReadWriteTest', async () => {
//         checkDB();
//         await vfsTestModule.simpleReadWriteTest(owner_id);
//     });
    
//     it('testFileOperations', async () => {
//         checkDB();
//         await vfsTestModule.testFileOperations(owner_id);
//     });
    
//     it('testPathOperations', async () => {
//         checkDB();
//         await vfsTestModule.testPathOperations();
//     });
    
//     // Test error handling (testing error conditions and ensuring they're handled correctly)
//     it('testErrorHandling', async () => {
//         checkDB();
//         await vfsTestModule.testErrorHandling(owner_id);
//     });
    
//     it('pgdbTestMoveUp', async () => {
//         checkDB();
//         await fileMovesTestModule.pgdbTestMoveUp(owner_id);
//     });
    
//     it('pgdbTestSetFolderPublic', async () => {
//         checkDB();
//         await authTestModule.pgdbTestSetFolderPublic(owner_id);
//     });
    
//     it('deleteFolder', async () => {
//         checkDB();
//         await vfsTestModule.deleteFolder(owner_id, '0001_test-structure');
//     });
    
//     it('renameFolder', async () => {
//         checkDB();
//         await vfsTestModule.renameFolder(owner_id, '0001_test-structure', '0099_renamed-test-structure');
//     });
    
//     it('testEnsurePath', async () => {
//         checkDB();
//         await vfsTestModule.testEnsurePath(owner_id);
//     });
    
//     it('testSetPublic', async () => {
//         checkDB();
//         await vfsTestModule.testSetPublic(owner_id);
//     });
    
//     it('testSearch', async () => {
//         checkDB();
//         await vfsTestModule.testSearch();
//     });

//     it('resetTestEnvironment', async () => {
//         checkDB();
//         await vfsTestModule.resetTestEnvironment();
//     });
// });

